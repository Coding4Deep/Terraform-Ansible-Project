- name: Install Java
  apt:
    name: openjdk-17-jdk
    state: present
    update_cache: true

- name: Install git
  apt:
    name: git
    state: present
    update_cache: true

- name: Create Tomcat group
  group:
    name: "{{ tomcat_user }}"

- name: Create Tomcat user
  user:
    name: "{{ tomcat_user }}"
    shell: /bin/false
    group: "{{ tomcat_user }}"

- name: Download Tomcat
  get_url:  
    url: "https://dlcdn.apache.org/tomcat/tomcat-11/v{{ tomcat_version }}/bin/apache-tomcat-{{ tomcat_version }}.tar.gz"
    dest: "/tmp/apache-tomcat-{{ tomcat_version }}.tar.gz"

- name: Create installation directory
  file:
    path: "{{ tomcat_install_dir }}"
    state: directory
    mode: '0755'

- name: Extract Tomcat archive
  unarchive:
    src: "/tmp/apache-tomcat-{{ tomcat_version }}.tar.gz"
    dest: "{{ tomcat_install_dir }}"
    remote_src: yes
    extra_opts: [--strip-components=1]

- name: Change ownership
  file:
    path: "{{ tomcat_install_dir }}"
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_user }}"
    recurse: yes

- name: Make scripts executable
  file:
    path: "{{ tomcat_install_dir }}/bin/{{ item }}"
    mode: '0755'
  loop:
    - startup.sh
    - shutdown.sh


- name: Copy tomcat-users.xml with credentials from Vault
  template:
    src: tomcat-users.xml.j2
    dest: "{{ tomcat_install_dir }}/conf/tomcat-users.xml"
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_user }}"
    mode: '0644'


- name: Allow remote access to manager app
  replace:
    path: "{{ tomcat_install_dir }}/webapps/manager/META-INF/context.xml"
    regexp: '<Valve className="org.apache.catalina.valves.RemoteAddrValve"[^>]+/>'
    replace: '<!-- RemoteAddrValve removed by Ansible for remote access -->'

- name: Allow remote access to host-manager app
  replace:
    path: "{{ tomcat_install_dir }}/webapps/host-manager/META-INF/context.xml"
    regexp: '<Valve className="org.apache.catalina.valves.RemoteAddrValve"[^>]+/>'
    replace: '<!-- RemoteAddrValve removed by Ansible for remote access -->'

- name: Create systemd service
  copy:
    dest: /etc/systemd/system/tomcat.service
    content: |
      [Unit]
      Description=Apache Tomcat Web Application Container
      After=network.target

      [Service]
      Type=forking

      User={{ tomcat_user }}
      Group={{ tomcat_user }}

      Environment="JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64"
      Environment="CATALINA_PID={{ tomcat_install_dir }}/temp/tomcat.pid"
      Environment="CATALINA_HOME={{ tomcat_install_dir }}"
      Environment="CATALINA_BASE={{ tomcat_install_dir }}"
      Environment="CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC"
      Environment="JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom"

      ExecStart={{ tomcat_install_dir }}/bin/startup.sh
      ExecStop={{ tomcat_install_dir }}/bin/shutdown.sh

      Restart=on-failure

      [Install]
      WantedBy=multi-user.target

- name: Reload systemd
  systemd:
    daemon_reload: yes

- name: Start Tomcat
  systemd:
    name: tomcat
    state: started
    enabled: yes

- name: Install Maven
  apt:
    name: maven
    state: present
    update_cache: true  

- name: clone git repository
  git:
    repo: 'https://github.com/Coding4Deep/Terraform-Ansible-Project.git'
    dest: /opt/Terraform-Ansible-Project
    version: springboot
    force: yes
  register: git_clone

- name: build the springboot application
  shell: mvn clean package -DskipTests
  args:
    chdir: /opt/Terraform-Ansible-Project/
  when: git_clone.changed

- name: Remove everything from Tomcat webapps directory
  file:
    path: "{{ tomcat_install_dir }}/webapps"
    state: absent

- name: Recreate empty Tomcat webapps directory
  file:
    path: "{{ tomcat_install_dir }}/webapps"
    state: directory
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_user }}"
    mode: '0755'

- name: Find the WAR file generated by Maven
  shell: ls /opt/Terraform-Ansible-Project/target/*.war
  register: war_file

- name: Deploy application WAR as ROOT.war
  copy:
    src: "{{ war_file.stdout }}"
    dest: "{{ tomcat_install_dir }}/webapps/ROOT.war"
    remote_src: true
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_user }}"
    mode: '0644'
  notify: Restart Tomcat


